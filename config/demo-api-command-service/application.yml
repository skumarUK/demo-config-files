server:
  contextPath: /api
  port: 8089

spring:
  kafka:
    bootstrapServers: localhost:9092
    consumer:
      groupId: kafka-demo-group
      keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
      valueDeserializer: demo.api.command.service.kafka.serialization.ItemEventDeserializer
      autoOffsetReset: earliest
      enableAutoCommit: false
      isolationLevel: read_committed
    listener:
      ackMode: MANUAL

  sleuth:
    sampler:
      percentage: 1.0
    web:
      skipPattern: (^cleanup.*)
  zipkin:
    sender:
      type: web

kafka:
 demo:
  topic: topic-kafka-demo-topic

eureka:
  client:
    enabled: true
    registryFetchIntervalSeconds: 10 # how often to fetch the registry from Eureka server
    instanceInfoReplicationIntervalSeconds: 10 # how often to replicate instance changes to be replicated to Eureka server
  instance:
    leaseRenewalIntervalInSeconds: 10 # intervalSeconds between subsequent heartbeats sent to Eureka server
    leaseExpirationDurationInSeconds: 20 # time that Eureka server waits since it received last heartbeat before it can evict this instance




zipkinserver:
  ribbon:
    ListOfServers: demo-api-zipkin-service

management:
  securitymanagement:
    security:
      enabled: false
  endpoints:
    web:
      exposure:
        include: ["health", "info", "refresh"]